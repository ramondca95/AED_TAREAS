{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ASIENTOS_CAMBIANTES","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOTk/XIpCYm02ffadroV1pN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"tznrl8zyubas"},"source":["\n","#**¿Qué se observa sí los pasajeros no respetan su boleto?**\n","\n","Existen N pasajeros en N asientos.\n","\n","1. Cada pasajero subirá y con una probabilidad P se sentará en el asiento que dice su boleto (Si P = 1, es el caso 'ORGANIZADO').\n","\n","2. Si el asiento está ocupado se sentará en cualquier otro asiento disponible.\n","\n","3. El último pasajero U en subir, insistirá en sentarse en su asiento.\n","\n","Preguntas: \n","\n","### ¿Cuál es la probabilidad de que U se siente en su asiento (En función de P)?\n","\n","La probabilidad de que U se siente en su asiento cuando la probabilidad de sentarse en su asiento es 0%, es 0%. Para cuando la probabilidad es 100%, es 100%. Lo interesante es lo que se encuentra dentro de ese rango de 0 y 100.\n","\n","Entre más sea la probabilidad de sentarse cada pasajero en su lugar, mayor será la probabilidad de que el último encuentre su asiento disponible. Para saber el comportamiento de la curva se pueden realizar 2 simulaciones. Cuando  P = 0.5 y cuando P = .975. La razón de estos valores de P es que al ser la función de orden exponencial creciente, el intervalo entre uno y otro pueden mostrar cambios más significativos.\n","\n","Se realizó la simulación 100 veces cunado P = 0.5, y se obtuvo un promedio de 0.0567, mientras que el promedio para P = 0.975 fue de 58%. Por lo que P crece de manera exponencial.\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HtZXSwDB8mhg","executionInfo":{"status":"ok","timestamp":1616605940307,"user_tz":360,"elapsed":489,"user":{"displayName":"Ramon Cota","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgbiHIDBtWApUHSkFaPoAM04BcC8aHALjQJ1U_6BQ=s64","userId":"09201971315991227428"}},"outputId":"a571022f-2cf3-44df-d747-dccaf628ebb0"},"source":["import numpy as np\n","N = 40\n","bus = np.zeros((N))\n","def bus_visualization(bus):\n","  bus2 = bus.reshape(10,4)\n","  print(bus2)\n","print(\"---- Autobus Vacío ----\")\n","bus_vizualizacion = bus.reshape(10,4)\n","pasajeros = np.arange(1, N+1, 1)\n","bus_visualization(bus)\n","# print(pasajeros)\n","\n","Probabilidad = 50\n","import random\n","u = 0\n","contador = 0\n","for i in range(1, N+1):\n","  A = bus.tolist()\n","  x = random.randint(1,100)\n","  # print(\"------Pasajero\",i,\"-------\")\n","  if (x>Probabilidad or bus[i-1]!=0):\n","    # print(\"Asiento Aleatorio\")\n","    contador = contador + 1\n","    asiento_nuevo = random.randint(0,N-1)\n","    if bus[asiento_nuevo] == 0:\n","      bus[asiento_nuevo] = pasajeros[i-1]\n","    else:\n","      bus[A.index(0)] = pasajeros[i-1]\n","  \n","  if (x<Probabilidad and bus[i-1]==0):\n","    bus[i-1]=pasajeros[i-1]\n","      \n","  if(i % 10 == 0):\n","    print(\"------Pasajero\",i,\"-------\")\n","    print(\"Autobus con \", Probabilidad, \"de Probabilidad\")\n","    bus_visualization(bus)\n","if(bus[N-1] == 0):\n","  u = 1\n","# print(\"------Pasajero\",i,\"-------\")\n","# bus_visualization(bus)\n","print(\"Número de cambios de asiento: \" , contador)\n","print(u)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["---- Autobus Vacío ----\n","[[0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]\n"," [0. 0. 0. 0.]]\n","------Pasajero 10 -------\n","Autobus con  50 de Probabilidad\n","[[ 1.  2.  3.  0.]\n"," [ 5.  0.  7.  0.]\n"," [ 9. 10.  0.  0.]\n"," [ 0.  0.  8.  0.]\n"," [ 0.  0.  0.  0.]\n"," [ 0.  0.  0.  0.]\n"," [ 0.  0.  0.  0.]\n"," [ 6.  0.  0.  0.]\n"," [ 0.  0.  4.  0.]\n"," [ 0.  0.  0.  0.]]\n","------Pasajero 20 -------\n","Autobus con  50 de Probabilidad\n","[[ 1.  2.  3.  0.]\n"," [ 5.  0.  7. 16.]\n"," [ 9. 10.  0.  0.]\n"," [ 0. 14.  8.  0.]\n"," [ 0. 13.  0. 20.]\n"," [ 0.  0.  0.  0.]\n"," [12.  0.  0. 19.]\n"," [ 6.  0.  0. 11.]\n"," [ 0. 17.  4.  0.]\n"," [15.  0.  0. 18.]]\n","------Pasajero 30 -------\n","Autobus con  50 de Probabilidad\n","[[ 1.  2.  3. 25.]\n"," [ 5. 27.  7. 16.]\n"," [ 9. 10. 29.  0.]\n"," [ 0. 14.  8.  0.]\n"," [ 0. 13.  0. 20.]\n"," [21. 22. 23. 24.]\n"," [12. 26.  0. 19.]\n"," [ 6. 30.  0. 11.]\n"," [28. 17.  4.  0.]\n"," [15.  0.  0. 18.]]\n","------Pasajero 40 -------\n","Autobus con  50 de Probabilidad\n","[[ 1.  2.  3. 25.]\n"," [ 5. 27.  7. 16.]\n"," [ 9. 10. 29. 32.]\n"," [34. 14.  8. 35.]\n"," [37. 13. 33. 20.]\n"," [21. 22. 23. 24.]\n"," [12. 26. 38. 19.]\n"," [ 6. 30. 31. 11.]\n"," [28. 17.  4. 36.]\n"," [15. 39. 40. 18.]]\n","Número de cambios de asiento:  24\n","0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"si-6teWl8x20","executionInfo":{"status":"ok","timestamp":1616550239250,"user_tz":360,"elapsed":937,"user":{"displayName":"Ramon Cota","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgbiHIDBtWApUHSkFaPoAM04BcC8aHALjQJ1U_6BQ=s64","userId":"09201971315991227428"}},"outputId":"03dbc8a4-ffb9-4c0f-9292-244a3c28b97b"},"source":["import numpy as np\n","N = 40\n","bus = np.zeros((N))\n","def bus_visualization(bus):\n","  bus2 = bus.reshape(10,4)\n","  print(bus2)\n","  \n","pasajeros = np.arange(1, N+1, 1)\n","# bus_visualization(bus)\n","# print(pasajeros)\n","import random\n","\n","lista2 = []\n","lista3 = []\n","for j in range(0,101):\n","  u = 0\n","  bus = np.zeros((N))\n","  pasajeros = np.arange(1, N+1, 1)\n","  Probabilidad = j\n","  contador = 0\n","  for i in range(1, N+1):\n","    A = bus.tolist()\n","    x = random.randint(1,100)\n","    # print(\"------Pasajero\",i,\"-------\")\n","    if (x>Probabilidad or bus[i-1]!=0):\n","      # print(\"Asiento Aleatorio\")\n","      contador = contador + 1\n","      asiento_nuevo = random.randint(0,N-1)\n","      if bus[asiento_nuevo] == 0:\n","        bus[asiento_nuevo] = pasajeros[i-1]\n","      else:\n","        bus[A.index(0)] = pasajeros[i-1]\n","    \n","    if (x<Probabilidad and bus[i-1]==0):\n","      bus[i-1]=pasajeros[i-1]\n","    \n","  if(j % 30 == 0):\n","    print(\"Autobus con \", j, \"de Probabilidad\")\n","    bus_visualization(bus)\n","       \n","  lista2.append(contador)    \n","\n","print(\"Autobus con \", j, \"de Probabilidad\")\n","bus_visualization(bus)\n","from matplotlib import pyplot as plt\n","plt.plot(lista2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Autobus con  0 de Probabilidad\n","[[ 3.  4.  6.  9.]\n"," [13. 10.  1. 15.]\n"," [17. 18. 19.  8.]\n"," [21. 24. 11. 25.]\n"," [14. 26.  5. 27.]\n"," [28. 30. 31. 33.]\n"," [34. 22. 36. 20.]\n"," [29. 23. 37. 35.]\n"," [ 7. 38.  2. 16.]\n"," [39. 40. 32. 12.]]\n","Autobus con  30 de Probabilidad\n","[[ 1.  8. 15.  6.]\n"," [ 5. 19.  7. 20.]\n"," [11.  9. 23.  3.]\n"," [27. 14. 29. 31.]\n"," [17. 32.  4. 33.]\n"," [21. 13. 18. 22.]\n"," [25. 30. 34. 36.]\n"," [26. 37. 10. 28.]\n"," [16. 12. 35. 38.]\n"," [39.  2. 24. 40.]]\n","Autobus con  60 de Probabilidad\n","[[ 8.  2.  3. 14.]\n"," [ 5.  1.  7. 15.]\n"," [ 9. 10. 17. 12.]\n"," [13. 19. 21. 22.]\n"," [25. 18. 26. 27.]\n"," [20. 31. 32. 24.]\n"," [33. 35.  4. 28.]\n"," [29. 30. 23. 36.]\n"," [16. 34. 37. 39.]\n"," [40. 38. 11.  6.]]\n","Autobus con  90 de Probabilidad\n","[[ 1. 17.  3.  4.]\n"," [ 5.  6.  7.  8.]\n"," [ 9. 10. 11. 12.]\n"," [13. 14. 15. 16.]\n"," [ 2. 18. 19. 20.]\n"," [21. 25. 23. 29.]\n"," [32. 40. 27. 28.]\n"," [22. 30. 31.  0.]\n"," [33. 34. 35. 36.]\n"," [37. 38. 39.  0.]]\n","Autobus con  100 de Probabilidad\n","[[ 1.  2.  3.  4.]\n"," [ 5.  6.  7.  8.]\n"," [ 9. 10. 11. 12.]\n"," [13. 14. 15. 16.]\n"," [17. 18. 19. 20.]\n"," [21. 22. 23. 24.]\n"," [25. 26. 27. 28.]\n"," [29. 30. 31. 32.]\n"," [33. 34. 35. 36.]\n"," [37. 38. 39. 40.]]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f71c503ac10>]"]},"metadata":{"tags":[]},"execution_count":159},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"j6N5n5koAVKv","executionInfo":{"status":"ok","timestamp":1616606008798,"user_tz":360,"elapsed":20844,"user":{"displayName":"Ramon Cota","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgbiHIDBtWApUHSkFaPoAM04BcC8aHALjQJ1U_6BQ=s64","userId":"09201971315991227428"}},"outputId":"41063e24-25d3-427c-ee32-761c06e31a6a"},"source":["import numpy as np\n","N = 40\n","bus = np.zeros((N))\n","def bus_visualization(bus):\n","  bus2 = bus.reshape(10,4)\n","  print(bus2)\n","  \n","pasajeros = np.arange(1, N+1, 1)\n","# bus_visualization(bus)\n","# print(pasajeros)\n","import random\n","M = 1000\n","MN = M*N\n","\n","\n","lista3 = [] \n","\n","lista5 = []\n","for j in range(0,100):\n","  lista2 = []\n","  lista4 = []\n","  for k in range(0,M):\n","    u = 0\n","    bus = np.zeros((N))\n","    pasajeros = np.arange(1, N+1, 1)\n","    Probabilidad = j\n","    contador = 0\n","    for i in range(1, N):\n","      A = bus.tolist()\n","      x = random.randint(1,100)\n","      # print(\"------Pasajero\",i,\"-------\")\n","      if (x>Probabilidad or bus[i-1]!=0):\n","        # print(\"Asiento Aleatorio\")\n","        contador = contador + 1\n","        asiento_nuevo = random.randint(0,N-1)\n","        if bus[asiento_nuevo] == 0:\n","          bus[asiento_nuevo] = pasajeros[i-1]\n","        else:\n","          bus[A.index(0)] = pasajeros[i-1]\n","      \n","      if (x<Probabilidad and bus[i-1]==0):\n","        bus[i-1]=pasajeros[i-1]\n","    # bus_visualization(bus)\n","            # print(u)\n","    \n","    lista2.append(contador)\n","  \n","# print(np.mean(lista2))\n","  \n","  lista3.append(np.mean(lista2))\n","# print(lista5)\n","from matplotlib import pyplot as plt\n","plt.plot(lista3)\n","\n","\n"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f868a478110>]"]},"metadata":{"tags":[]},"execution_count":3},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}